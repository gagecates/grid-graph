{"version":3,"sources":["components/UserInput.js","components/GraphDisplay.js","components/App.js","index.js"],"names":["UserInput","state","errors","fields","onFormSubmit","event","preventDefault","handleValidation","console","log","props","this","formIsValid","match","setState","field","e","target","value","className","onSubmit","type","placeholder","onChange","handleChange","bind","required","style","color","React","Component","GraphDisplay","graph","src","alt","App","showGraph","levels","a","axios","post","data","image","alert","message","ReactDOM","render","document","querySelector"],"mappings":"yOAiGeA,E,4MA9FXC,MAAQ,CACJC,OAAQ,GACRC,OAAQ,I,EA+CZC,aAAe,SAAAC,GACXA,EAAMC,iBACH,EAAKC,qBACJC,QAAQC,IAAI,aACZ,EAAKC,MAAMN,aAAa,EAAKH,MAAME,OAAX,IAA0B,EAAKF,MAAME,OAAX,S,sDAhD1D,WACI,IAAIA,EAASQ,KAAKV,MAAME,OACpBD,EAAS,GACTU,GAAc,EAgCnB,OA7BKT,EAAM,MACPS,GAAc,EACdV,EAAM,MAAY,0BAGO,qBAAlBC,EAAM,MACTA,EAAM,IAAQU,MAAM,gBACrBD,GAAc,EACdV,EAAM,MAAY,kBAIrBC,EAAM,IAAU,OAASA,EAAM,IAAU,SACxCS,GAAc,EACdV,EAAM,MAAY,oDAIlBC,EAAM,QACPS,GAAc,EACdV,EAAM,MAAY,0BAGlBC,EAAM,MAAY,IACjBS,GAAc,EACdV,EAAM,MAAY,uCAGvBS,KAAKG,SAAS,CAACZ,OAAQA,IAChBU,I,0BAGV,SAAaG,EAAOC,GAChB,IAAIb,EAASQ,KAAKV,MAAME,OACxBA,EAAOY,GAASC,EAAEC,OAAOC,MACzBP,KAAKG,SAAS,CAACX,a,oBAWnB,WACI,OACI,sBAAKgB,UAAU,WAAf,UACI,kIACA,uBAAMC,SAAUT,KAAKP,aAAce,UAAU,OAA7C,UACI,sBAAKA,UAAU,aAAf,UACI,sBAAKA,UAAU,QAAf,UACI,iDACA,uBACIE,KAAK,SACLH,MAAOP,KAAKV,MAAME,OAAX,IACPmB,YAAY,cACZC,SAAUZ,KAAKa,aAAaC,KAAKd,KAAM,OACvCe,UAAQ,OAGhB,sBAAKP,UAAU,QAAf,UACI,0CACA,uBACIE,KAAK,SACLH,MAAOP,KAAKV,MAAME,OAAX,MACPoB,SAAUZ,KAAKa,aAAaC,KAAKd,KAAM,SACvCe,UAAQ,UAIpB,qBAAKP,UAAU,QAAQQ,MAAO,CAACC,MAAO,OAAtC,SAA+CjB,KAAKV,MAAMC,OAAX,QAC/C,wBAAQmB,KAAK,SAASF,UAAU,iBAAhC,mC,GArFIU,IAAMC,WCefC,EAfM,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAGnB,OAFAxB,QAAQC,IAAIuB,GAEPA,EAMD,qBAAKb,UAAU,kBAAf,SACI,qBAAKA,UAAU,QAAQc,IAAKD,EAAOE,IAAI,UANpC,qBAAKf,UAAU,UAAf,yB,yBCwCAgB,E,4MAvCblC,MAAQ,CACN+B,MAAO,KACPI,WAAW,G,EAGbhC,a,uCAAe,WAAOa,EAAQoB,GAAf,iBAAAC,EAAA,6DAEb,EAAKxB,SAAS,CAACkB,MAAO,OACtB,EAAKlB,SAAS,CAACsB,WAAW,IAHb,SAKUG,IAAMC,KAAK,8BAA+B,CAACvB,OAAQA,EAAQoB,OAAQA,IAL7E,gBAOM,QAFXI,EALK,EAKLA,MAECC,OACPC,MAAMF,EAAKG,SACX,EAAK9B,SAAS,CAACsB,WAAW,KAE1B,EAAKtB,SAAS,CAACkB,MAAOS,EAAKC,QAXhB,2C,oGAgBf,WACE,OACE,gCACE,qBAAKvB,UAAU,SAAf,SACE,8EAEF,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAWf,aAAcO,KAAKP,eAC5BO,KAAKV,MAAMmC,WAAa,cAAC,EAAD,CAAcJ,MAAOrB,KAAKV,MAAM+B,WAE5D,qBAAKb,UAAU,UAAf,SACE,kDAAoB,uBAApB,mB,GAjCQU,IAAMC,WCFxBe,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.175eec5c.chunk.js","sourcesContent":["import React from 'react';\n\nclass UserInput extends React.Component {\n    state = { \n        errors: {},\n        fields: {}\n    };\n\n    handleValidation(){\n        let fields = this.state.fields;\n        let errors = {};\n        let formIsValid = true;\n\n        //bus start number check\n        if(!fields[\"bus\"]){\n           formIsValid = false;\n           errors[\"input\"] = \"Field can not be empty\";\n        }\n  \n        if(typeof fields[\"bus\"] !== \"undefined\"){\n           if(!fields[\"bus\"].match(/^[0-9\\b]+$/)){\n              formIsValid = false;\n              errors[\"input\"] = \"Only numbers\";\n           }        \n        }\n\n        if(fields[\"bus\"] < 10001 || fields[\"bus\"] > 80100){\n            formIsValid = false;\n            errors[\"input\"] = \"Please enter a bus in the range of 10001 - 80100\";\n         }\n   \n        //level check\n        if(!fields[\"level\"]){\n           formIsValid = false;\n           errors[\"input\"] = \"Field can not be empty\";\n        }\n\n        if(fields[\"level\"] < 1){\n            formIsValid = false;\n            errors[\"input\"] = \"Please enter at least a level of 1.\";\n        }\n\n       this.setState({errors: errors});\n       return formIsValid;\n    }\n\n    handleChange(field, e){         \n        let fields = this.state.fields;\n        fields[field] = e.target.value;        \n        this.setState({fields});\n    }\n\n    onFormSubmit = event => {\n        event.preventDefault();\n        if(this.handleValidation()){\n            console.log('no errors')\n            this.props.onFormSubmit(this.state.fields[\"bus\"], this.state.fields[\"level\"]);\n        } \n    };\n\n    render() {\n        return (\n            <div className='overview'>\n                <p>To see a focused view on a particular portion of the grid, choose a starting bus and depth level.</p>\n                <form onSubmit={this.onFormSubmit} className=\"form\">\n                    <div className='user-input'>\n                        <div className=\"field\">\n                            <label>Starting Bus</label>\n                            <input\n                                type=\"number\"\n                                value={this.state.fields[\"bus\"]}\n                                placeholder=\"10001-80100\"\n                                onChange={this.handleChange.bind(this, \"bus\")}\n                                required\n                            />\n                        </div>\n                        <div className=\"field\">\n                            <label>Level</label>\n                            <input\n                                type=\"number\"\n                                value={this.state.fields[\"level\"]}\n                                onChange={this.handleChange.bind(this, \"level\")}\n                                required\n                            />\n                        </div>\n                    </div>\n                    <div className='error' style={{color: \"red\"}}>{this.state.errors[\"input\"]}</div>\n                    <button type='submit' className=\"button button1\">Fetch Graph</button>\n                </form>\n            </div>\n\n            \n        );\n    }\n}\n\n\nexport default UserInput;\n","import React from 'react';\n\nconst GraphDisplay = ({graph}) => {\n    console.log(graph)\n\n    if (!graph) {\n        return <div className='loading'>Loading...</div>;\n      }\n\n    return(\n\n        <div className='graph-container'>\n            <img className='graph' src={graph} alt=\"img\" />\n        </div>\n    )\n};\n\nexport default GraphDisplay;","import React from 'react';\nimport UserInput from './UserInput';\nimport GraphDisplay from './GraphDisplay';\nimport './page.css';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  state = { \n    graph: null,\n    showGraph: false\n  };\n\n  onFormSubmit = async (target, levels) => {\n\n    this.setState({graph: null});\n    this.setState({showGraph: true})\n    //'https://grid-view-gmc.herokuapp.com/graph'\n    const { data } = await axios.post('http://localhost:5000/graph', {target: target, levels: levels})\n    \n    if (data.image === null){\n      alert(data.message)\n      this.setState({showGraph: false})\n    }else{\n      this.setState({graph: data.image});\n    }\n\n  };\n\n  render() {\n    return (\n      <div>\n        <div className='header'>\n          <h3>Introductory Project for Frontend Engineer</h3>\n        </div>\n        <div className='main-content'>\n          <UserInput onFormSubmit={this.onFormSubmit}/>\n          { this.state.showGraph && <GraphDisplay graph={this.state.graph}/>}\n        </div>\n        <div className='hire-me'>\n          <div>Hire Gage Cates<br/>2020</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}